/*
*NOMBRE:Proyecto No. 1
*AUTOR:Wadith Enrique Montenegro , Yuri Orfilia Sanchez , Cristhian David Giraldo
*FECHA:Septiembre/2017
*DESCRIPCION:Crear una Factura de venta
*/
#include<stdio.h>
#include<windows.h>
#include <conio.h>

void gotoxy(int x,int y )
{
	COORD coord;
	coord.X=x;
	coord.Y=y;
	SetConsoleCursorPosition( GetStdHandle(STD_OUTPUT_HANDLE),coord);
}

void dibujarRectangulo(int altura, int ancho)
{
	int i;
	//columna
	for (i=3;i<altura;i++)
	{
		gotoxy(2,i); printf("\333");
		gotoxy(ancho,i);printf("\333");
	}
	//fila
	for (i=3;i<ancho;i++)
	{
		gotoxy(i,2); printf("\333");
		gotoxy(i,altura); printf("\333");
	}
	gotoxy(2,2); printf("\333"); //esquina superior izquierda
	gotoxy(ancho,2); printf("\333"); //esquina superior derecha
	gotoxy(2,altura); printf("\333"); //esquina inferior derecha
	gotoxy(ancho,altura); printf("\333"); 	//esquina inferior izquierda
}
//****************************************************************
struct Cliente
{
	char id[13];
	char nombre[30];
	char direccion[30];
	char telefono[10];
}usuarios[100], *p_usuarios = usuarios;


struct Producto
{
	int id;
	char nombre[30];
	float valor;
	
}productos[100], *p_productos = productos ;


struct Factura
{
	int id;
	int id_cliente;
	int id_producto[100];
	int cantidad[100];
	int cantidadProducto;
	float total;
	char estado;
	

}facturas[100], *p_facturas = facturas;

int contadorUsuarios = 0;
int contadorProductos = 0;
int contadorFacturas = 0;
//****************************************************************
int crearCliente()
{
	dibujarRectangulo(22,76);
	
	int resultado = 0;
	
	gotoxy(8, 4);printf("Ingrese Numero de Cedula:  ");
	scanf("%s",(p_usuarios+contadorUsuarios)->id);
	
	fflush(stdin);
	gotoxy(8, 5);printf("Ingrese Nombre:  ");
	fgets((p_usuarios+contadorUsuarios)->nombre, 30, stdin);
	
	fflush(stdin);
	gotoxy(8, 6); printf("Ingrese Direccion:  ");
	fgets((p_usuarios+contadorUsuarios)->direccion, 30, stdin);
	
	fflush(stdin);
	gotoxy(8, 7);printf("Ingrese Numero de Telefono:  ");
	fgets((p_usuarios+contadorUsuarios)->telefono, 10, stdin);
	
	contadorUsuarios++;
	
	getch();
	return resultado;
}

int listarCliente()
{
	dibujarRectangulo(22,76);
	
	int c = 9;//se utiliza para ubicacion de gotoxy
	int resultado = 0;
	for(int i = 0; i < contadorUsuarios; i ++)
	{
		gotoxy(25, 4);printf("----DATOS DE CLIENTES----");
		gotoxy(4, 7);printf("N°");
		gotoxy(9, 7);printf("Cedula");
		gotoxy(23, 7);printf("Nombre");
		gotoxy(40, 7);printf("Direccion");
		gotoxy(64, 7);printf("Telefono");
		
		gotoxy(4, c);printf("%d",i+1);
		gotoxy(9, c);printf("%s",(p_usuarios+i)->id);
		gotoxy(23, c);printf("%s",(p_usuarios+i)->nombre);
		gotoxy(40, c);printf("%s",(p_usuarios+i)->direccion);
		gotoxy(64, c);printf("%s",(p_usuarios+i)->telefono);
		c++;
		
	}
	
	getch();
	return resultado;
}

int editarCliente()
{
	dibujarRectangulo(22,76);
	int resultado = 0;
	
	char cedula[13];
	int i;
	int posicion = -1;
	
	gotoxy(4, 4);printf("Ingrese el Numero de Cedula que desea Editar:    ");
	scanf("%s",cedula);
	
	for(i = 0; i < contadorUsuarios; i++ )
	{
		if(strcmp((p_usuarios+i)->id, cedula) == 0)
		{
			posicion = i;
		}
	}
	
	if (posicion == -1)
	{
		gotoxy(25, 8);printf("DATO INVALIDO");
		
		getch();
		return -1;
	}
	
	int c = 10;
	
	gotoxy(25, 6);printf("----DATO DE CLIENTE----");
	gotoxy(4, 8);printf("Cedula");
	gotoxy(23, 8);printf("Nombre");
	gotoxy(40, 8);printf("Direccion");
	gotoxy(64, 8);printf("Telefono");
	
		
	gotoxy(4, c);printf("%s",(p_usuarios+posicion)->id);
	gotoxy(23, c);printf("%s",(p_usuarios+posicion)->nombre);
	gotoxy(40, c);printf("%s",(p_usuarios+posicion)->direccion);
	gotoxy(64, c);printf("%s",(p_usuarios+posicion)->telefono);
	c++;
	
	gotoxy(4, 13);printf("Ingrese Numero de Cedula:  ");
	scanf("%s",(p_usuarios+posicion)->id);
	
	fflush(stdin);
	gotoxy(4, 14);printf("Ingrese Nombre:  ");
	fgets((p_usuarios+posicion)->nombre, 30, stdin);
	
	fflush(stdin);
	gotoxy(4, 15);printf("Ingrese Direccion:  ");
	fgets((p_usuarios+posicion)->direccion, 30, stdin);
	
	fflush(stdin);
	gotoxy(4, 16);printf("Ingrese Numero de Telefono:  ");
	fgets((p_usuarios+posicion)->telefono, 10, stdin);
	
	gotoxy(22, 18);printf("EXITOSAMENTE EDITADO");
	getch();	
	return resultado;
}

int manejoClientes()
{
	int resultado = 0;
	int opcion=1;
	
	while(opcion!=0)
	{
		system("CLS");
		
		dibujarRectangulo(22,76);
		gotoxy(28,7);printf("M E N U");
		gotoxy(25,9);printf("1.Crear cliente: ");
		gotoxy(25,10);printf("2.Listar cliente: ");
		gotoxy(25,11);printf("3.Editar cliente: ");
		gotoxy(25,12);printf("0.Salir");
		gotoxy(25,15);printf("Seleccione Opcion: "); 
		scanf("%d",&opcion);
		
		switch(opcion)
		{
			case 1: 
			{
				system("CLS");
					
				resultado = crearCliente();
					
				
				break;
			}          
			case 2: 
			{
				system("CLS");
				
				resultado = listarCliente();
				
				break;
			}        
			
			case 3: 
			{
				system("CLS");
				
				resultado = editarCliente();
				
				break;
			} 
			
			default:{
				system("CLS");
				
				break;
			}          
		}
	
	}
	return resultado;
}	

//****************************************************************
int crearProducto()
{
	dibujarRectangulo(22,76);
	
	int resultado = 0;
	
	gotoxy(8, 4);printf("Ingrese el ID del producto: ");
	scanf("%d",&(p_productos+contadorProductos)->id);
	
	fflush(stdin);
	gotoxy(8, 5);printf("Ingrese Nombre del Producto: ");
	fgets((p_productos+contadorProductos)->nombre,30,stdin);
	
	gotoxy(8, 6);printf("Ingrese el Costo del Producto: ");
	scanf("%f",&(p_productos+contadorProductos)->valor);
	
	contadorProductos++;
	
	getch();
	return resultado;
}

int listarProducto()
{
	int c = 9;
	dibujarRectangulo(22,76);
	int resultado = 0;
	
	for(int i = 0; i < contadorProductos; i++)
	{
		gotoxy(25, 4);printf("----DATOS DEL LOS PRODUCTOS----");
		gotoxy(4, 7);printf("N°");
		gotoxy(9, 7);printf("ID Producto");
		gotoxy(30, 7);printf("Nombre Producto");
		gotoxy(60, 7);printf("Costo Und");
		
		gotoxy(4, c);printf("%d",i+1);
		gotoxy(13, c);printf("%d",(p_productos+i)->id);
		gotoxy(30, c);printf("%s",(p_productos+i)->nombre);
		gotoxy(60, c);printf("%.0f",(p_productos+i)->valor);
		c++;
	}
	
	getch();
	return resultado;
}

int editarProducto()
{
	dibujarRectangulo(22,76);
	
	int resultado = 0;
	int idproducto;
	int i;
	int posicion = -1;
	
	gotoxy(4, 4);printf("Ingrese el ID del producto que desea editar:  ");
	scanf("%d",&idproducto);
	
	for(i = 0; i < contadorProductos; i++)
	{
		if((p_productos+i)->id  ==  idproducto)
		{
			posicion = i;
		}
	}
		
	if (posicion == -1)
	{
		printf("DATO INVALIDO");
		
		getch();
		return -1;
	}
	int c = 10;
	gotoxy(25, 6);printf("----DATOS DEL PRODUCTO----");
	gotoxy(4, 8);printf("ID Producto");
	gotoxy(30, 8);printf("Nombre Producto");
	gotoxy(60, 8);printf("Costo Und");
		
	gotoxy(4, c);printf("%d",(p_productos+posicion)->id);
	gotoxy(30, c);printf("%s",(p_productos+posicion)->nombre);
	gotoxy(60, c);printf("%.0f",(p_productos+posicion)->valor);
	
	
	gotoxy(4, 13);printf("Ingrese el ID del producto: ");
	scanf("%d",&(p_productos+posicion)->id);
	
	fflush(stdin);
	gotoxy(4, 14);printf("Ingrese Nombre del Producto: ");
	fgets((p_productos+posicion)->nombre,30,stdin);
	
	gotoxy(4, 15);printf("Ingrese el Costo del Producto: ");
	scanf("%f",&(p_productos+posicion)->valor);
	
	gotoxy(22, 18);printf("EXITOSAMENTE EDITADO");
	
	getch();
	return resultado;
}

int manejoProducto()
{
	int resultado = 0;
	int opcion=1;
	
	while(opcion!=0)
	{
		system("CLS");
		
		dibujarRectangulo(22,76);
		gotoxy(28,7);printf("M E N U");
		gotoxy(25,9);printf("1.Crear producto: ");
		gotoxy(25,10);printf("2.Listar producto: ");
		gotoxy(25,11);printf("3.Editar producto: ");
		gotoxy(25,12);printf("0.Salir");
		gotoxy(25,15);printf("Seleccione Opcion: "); 
		scanf("%d",&opcion);
		
		switch(opcion)
		{
			case 1: 
			{
				system("CLS");
				
				resultado = crearProducto();
				
				
				break;
			}          
			case 2: 
			{
				system("CLS");
				
				resultado = listarProducto();
				
				break;
			}        
			
			case 3: 
			{
				system("CLS");
				
				resultado = editarProducto();
				
				break;
			} 
				
			
			default:{
				system("CLS");
				
				break;
			}          
		}
		
	}
	return resultado;
}

//****************************************************************
int crearFactura()
{
	
	int resultado = 0;
	int contadorProductosFacturas = 0;
	char id_cedula[13];
	int i, j;
	int posicionc = -1;
	int posicionp = -1;
		
	printf("Factura N° %d\n",contadorFacturas);
	
	((p_facturas+contadorFacturas)->id = contadorFacturas) ;
	
	
	while (posicionc == -1)
	{
		printf("Ingrese el Numero de Cedula del Cliente:  ");
		scanf("%s",id_cedula);
		for(j = 0; j < contadorUsuarios; j++ )
		{
			if(strcmp((p_usuarios+j)->id, id_cedula) == 0)
			{
				posicionc = j;
			}
		}
		
		if (posicionc == -1)
		{
			printf("\nDATO INVALIDO");
			
			getch();
			return -1;
		}
	}	
		
	((p_facturas + contadorFacturas)->id_cliente = posicionc);
	
	printf("\n----DATOS DEL CLIENTE ----\n");
	printf("Cedula: %s\n",(p_usuarios+posicionc)->id);
	printf("Nombre: %s",(p_usuarios+posicionc)->nombre);
	printf("Direccion: %s",(p_usuarios+posicionc)->direccion);
	printf("Telefono: %s",(p_usuarios+posicionc)->telefono);
	
	int id_producto;
		
	printf("\n\nIngrese el ID del producto (ingresa -1 para dejar de agregar productos):  ");
	scanf("%d",&id_producto);
	
	// aqui mientras el usuario no digite -1, va a seguir agregando productos
	while (id_producto != -1)
	{
		posicionp = -1;
		
		for(i = 0; i < contadorProductos; i++)
		{
			if((p_productos+i)->id  ==  id_producto)
			{
				posicionp = i;
			}
		}
		
		if (posicionp == -1)
		{
			printf("ESTADO INVALIDO");
			
			getch();
			
		}
		
		
		printf("\n\n----DATOS DEL LOS PRODUCTOS----\n\n");
		printf("ID Producto: %d \n",(p_productos+posicionp)->id);
		printf("Nombre: %s",(p_productos+posicionp)->nombre);
		printf("Costo: %.0f \n",(p_productos+posicionp)->valor);
		
		(p_facturas + contadorFacturas)->id_producto[contadorProductosFacturas] = id_producto;
		printf("Cantidad :  ");
		scanf("%d",&(p_facturas + contadorFacturas)->cantidad[contadorProductosFacturas]);
		
		(p_facturas+contadorFacturas)->total += ((p_facturas+contadorFacturas)->cantidad[contadorProductosFacturas] * (p_productos+posicionp)->valor);
		
		contadorProductosFacturas++;
	
		printf("\n\nIngrese el ID del producto (ingrese -1 para dejar de agregar productos):  ");
		scanf("%d",&id_producto);
		
	}
	
	(p_facturas+contadorFacturas)->cantidadProducto = contadorProductosFacturas;
	
	fflush(stdin);
	printf("Si la Factura esta pagada presiona (p) si no (s):   ");
	scanf("%c",&(p_facturas + contadorFacturas)->estado);
		
	while ((p_facturas+contadorFacturas)->estado != 'p' && (p_facturas+contadorFacturas)->estado != 's')
	{
		printf("ERROR INGRESA DE NUEVO (p) O (s)");
		printf("Si la Factura esta pagada presiona (p) si no (s):   ");
		scanf("%c",&(p_facturas + contadorFacturas)->estado);
	}
	
	printf("El Precio total de la factura es :%.0f", (p_facturas+contadorFacturas)->total);
	
	contadorFacturas++;
	
	getch();
	return resultado;
}

int listarFactura()
{
	int posicionProducto = 0;
	int posicionCliente = 0;
	int resultado = 0;
	int idProductoActual;
	int i, j;
	
	for(i = 0; i < contadorFacturas; i++)
	{
		printf("\n\n---FACTURA N° %d---\n",i);
		
		for(posicionCliente = 0; posicionCliente < contadorUsuarios; posicionCliente++)
		{
			if((p_facturas+i)->id_cliente == posicionCliente)
			{
				printf("Cedula: %s \n",(p_usuarios+posicionCliente)->id);
				printf("Cliente:  %s",(p_usuarios+posicionCliente)->nombre);
				printf("Direccion: %s",(p_usuarios+posicionCliente)->direccion);
				printf("Telefono: %s",(p_usuarios+posicionCliente)->telefono);
			}
		}
		
		
		
		printf("\nLa Factura tiene %d productos\n",(p_facturas+i)->cantidadProducto);
		
		printf("\nPRODUCTOS:\n");
		
		for(j = 0; j < (p_facturas + i)->cantidadProducto;j++ )
		{ 
			
			idProductoActual = (p_facturas + i)->id_producto[j];
			for (posicionProducto = 0; posicionProducto < contadorProductos; posicionProducto++)
			{
				if((p_productos + posicionProducto)->id == idProductoActual)
				{
					printf("ID Producto: %d \n",(p_productos + posicionProducto)->id);
					printf("Cant:  %d\n",(p_facturas+i)->cantidad[j]);
					printf("producto: %s",(p_productos+posicionProducto)->nombre);
					printf("precio Und: %.0f\n",(p_productos+posicionProducto)->valor);
				}
			}
		}
		
		printf("\nEl Precio total de la factura es :%.0f", (p_facturas+i)->total);
		printf("\nEl Estado es:  ");
		
		if((p_facturas+i)->estado == 'p')
		{
			printf("Factura Pagada\n");
		}
		else
		{
			printf("Factura Sin Pagar\n");
		}
	}
	
	getch();
	return resultado;
}

int editarFactura()
{
	int resultado = 0;
	int contadorProductosFacturas = 0;
	char id_cedula[13] = "";
	int i, j;
	int posicionc = -1;
	int posicionp = -1;
	int facturaAEditarId = -1;
	int posicionCliente = 0;
	int idProductoActual = 0;
	int posicionProducto = 0;
	
	printf("Ingrese el Numero de Factura: ");
	scanf("%d", &facturaAEditarId);
	
	//Buscando la factura
	
	if ( facturaAEditarId > contadorFacturas || facturaAEditarId < 0)
	{
		printf("\nID FACTURA INVALIDO\n");
		
		getch();
		return -1;
	}
	
	// Mostrando lo que tiene la factura
	
	printf("Factura N° %d\n",facturaAEditarId);
	
	for(posicionCliente = 0; posicionCliente < contadorUsuarios; posicionCliente++)
	{
		if((p_facturas+facturaAEditarId)->id_cliente == posicionCliente)
		{
			printf("Cedula: %s\n",(p_usuarios+posicionCliente)->id);
			printf("Cliente:  %s",(p_usuarios+posicionCliente)->nombre);
			printf("Direccion: %s",(p_usuarios+posicionCliente)->direccion);
			printf("Telefono: %s",(p_usuarios+posicionCliente)->telefono);
		}
	} 
	
	printf("La Factura tiene %d productos\n",(p_facturas+facturaAEditarId)->cantidadProducto);
	
	printf("\nPRODUCTOS:\n");
	
	for(j = 0; j < (p_facturas + facturaAEditarId)->cantidadProducto;j++ )
	{ 
		
		idProductoActual = (p_facturas + facturaAEditarId)->id_producto[j];
		for (posicionProducto = 0; posicionProducto < contadorProductos; posicionProducto++)
		{
			if((p_productos + posicionProducto)->id == idProductoActual)
			{
				printf("ID: %d \n",(p_productos + posicionProducto)->id);
				printf("Cant:  %d\n",(p_facturas+facturaAEditarId)->cantidad[j]);
				printf("producto: %s",(p_productos+posicionProducto)->nombre);
				printf("precio %.0f",(p_productos+posicionProducto)->valor);
			}
		}
	}
	
	printf("\nEl Precio total de la factura es :%.0f", (p_facturas+facturaAEditarId)->total);
	printf("\nEl Estado es:  ");
	
	if((p_facturas+facturaAEditarId)->estado == 'p')
	{
		printf("Factura Pagada\n");
	}
	else
	{
		printf("Factura Sin Pagar\n");
	}
	
	// Modificando la factura 
	
	printf("\nEditando la factura N° %d\n",facturaAEditarId); 
	
	while (posicionc == -1)
	{
		printf("Ingrese el Numero de Cedula del Cliente:  ");
		scanf("%s",id_cedula);
		
		for(i = 0; i < contadorUsuarios; i++ )
		{
			if(strcmp((p_usuarios+i)->id, id_cedula) == 0)
			{
				posicionc = i;
			}
		}
		
		if (posicionc == -1)
		{
			printf("DATO INVALIDO");
			
			getch();
		}
	}
	
	((p_facturas + facturaAEditarId)->id_cliente = posicionc);
	
	printf("\n----DATOS DEL CLIENTE ----\n");
	printf("Cedula: %s\n",(p_usuarios+posicionc)->id);
	printf("Nombre: %s",(p_usuarios+posicionc)->nombre);
	printf("Direccion: %s",(p_usuarios+posicionc)->direccion);
	printf("Telefono: %s",(p_usuarios+posicionc)->telefono);
	
	// Tenemos que borrar todos los productos de la factura
	
	for(i = 0; i < contadorProductosFacturas; i++)
	{
		//quitamos los productos que ya habian sido agregados
		(p_facturas + facturaAEditarId)->id_producto[i] = -1;
		
		//quitamos las cantidades de los productos que borramos
		(p_facturas + facturaAEditarId)->cantidad[i] = -1;
	}
	
	// Ponemos en 0 la cantidad de productos que llevaba la factura 
	(p_facturas + facturaAEditarId)->cantidadProducto = 0;
	contadorProductosFacturas = 0;
	
	int id_producto; 
	
	printf("\n\nIngrese el ID del producto (ingresa -1 para dejar de agregar productos):  ");
	scanf("%d",&id_producto);
	
	// aqui mientras el usuario no digite -1, va a seguir agregando productos
	while (id_producto != -1)
	{
		posicionp = -1;
		
		for(i = 0; i < contadorProductos; i++)
		{
			if((p_productos+i)->id  ==  id_producto)
			{
				posicionp = i;
			}
		}
		
		if (posicionp == -1)
		{
			printf("ESTADO INVALIDO");
			
			getch();
			return -1;
		}
		
		
		printf("\n\n----DATOS DEL LOS PRODUCTOS----\n\n");
		printf("ID Producto: %d \n",(p_productos+posicionp)->id);
		printf("Nombre: %s",(p_productos+posicionp)->nombre);
		printf("Costo: %.0f\n",(p_productos+posicionp)->valor);
		
		(p_facturas + facturaAEditarId)->id_producto[contadorProductosFacturas] = id_producto;
		printf("Cantidad : ");
		scanf("%d",&(p_facturas + facturaAEditarId)->cantidad[contadorProductosFacturas]);
		
		(p_facturas+facturaAEditarId)->total += ((p_facturas+facturaAEditarId)->cantidad[contadorProductosFacturas] * (p_productos+posicionp)->valor);
		
		contadorProductosFacturas++;
		
		printf("\n\nIngrese el ID del producto (ingrese -1 para dejar de agregar productos):  ");
		scanf("%d",&id_producto);
		
	}
	
	(p_facturas+facturaAEditarId)->cantidadProducto = contadorProductosFacturas;
	
	fflush(stdin);
	printf("Si la Factura esta pagada presiona (p) si no (s):   ");
	scanf("%c",&(p_facturas + facturaAEditarId)->estado);
	
	while ((p_facturas+facturaAEditarId)->estado != 'p' && (p_facturas+facturaAEditarId)->estado != 's')
	{
		printf("ERROR INGRESA DE NUEVO (p) O (s)");
		printf("Si la Factura esta pagada presiona (p) si no (s):   ");
		scanf("%c",&(p_facturas + facturaAEditarId)->estado);
	}
	
	printf("El Precio total de la factura es : %.0f", (p_facturas+facturaAEditarId)->total);
	
	getch();
	return resultado;
}
	


int manejoFacturas()
{
	int resultado = 0;
	int opcion=1;
	
	while(opcion!=0)
	{
		system("CLS");
		
		
		dibujarRectangulo(22,76);
		gotoxy(28,7);printf("M E N U");
		gotoxy(25,9);printf("1.Crear Factura: ");
		gotoxy(25,10);printf("2.Listar Factura: ");
		gotoxy(25,11);printf("3.Editar Factura: ");
		gotoxy(25,12);printf("0.Salir");
		gotoxy(25,15);printf("Seleccione Opcion: "); 
		scanf("%d",&opcion);
		
		switch(opcion)
		{
			case 1: 
			{
				system("CLS");
				
				resultado = crearFactura();

				break;
			}          
			case 2: 
			{
				system("CLS");
				
				resultado = listarFactura();
				
				break;
			}        
			
			case 3: 
			{
				system("CLS");
				
				resultado = editarFactura();
				
				break;
			} 
			
			
			default:{
				system("CLS");
				
				break;
			}          
		}
		
	}
	return resultado;
}

//*************************************************************************
int facturasClientes()
{
	int resultado = 0;
	int posicionProducto = 0;
	int posicionCliente = 0;
	int idProductoActual;
	int i, j;
	char idClienteFactura[13];
	int nuevoCliente = -1;
	
	printf("Ingrese la Cedula del cliente:  ");
	scanf("%s",idClienteFactura);
	
	for(posicionCliente = 0; posicionCliente < contadorUsuarios; posicionCliente++)
	{
		if(strcmp((p_usuarios+posicionCliente)->id , idClienteFactura) == 0)
		{
			nuevoCliente = posicionCliente;
			
		}
	}
	
	if ( nuevoCliente == -1)
	{
		printf("NUMERO DE CEDULA INVALIDA!!");
		
		getch();
		return -1;
	}
	
	for(i = 0; i < contadorFacturas; i++)
	{
		if((p_facturas+i)->id_cliente == nuevoCliente)
		{
			printf("\nFactura N° %d\n",i);
			printf("Cedula:  %s\n",(p_usuarios + nuevoCliente)->id);
			printf("Cliente:  %s",(p_usuarios + nuevoCliente)->nombre);
			printf("Direccion: %s",(p_usuarios + nuevoCliente)->direccion);
			printf("Telefono: %s",(p_usuarios + nuevoCliente)->telefono);
			
			
			printf("\nLa Factura tiene %d productos\n",(p_facturas+i)->cantidadProducto);
			
			printf("\n----PRODUCTOS---\n");
			
			for(j = 0; j < (p_facturas + i)->cantidadProducto;j++ )
			{ 
				
				idProductoActual = (p_facturas + i)->id_producto[j];
				for (posicionProducto = 0; posicionProducto < contadorProductos; posicionProducto++)
				{
					if((p_productos + posicionProducto)->id == idProductoActual)
					{
						printf("ID Producto: %d \n",(p_productos + posicionProducto)->id);
						printf("Cant:  %d\n",(p_facturas+i)->cantidad[j]);
						printf("producto: %s",(p_productos+posicionProducto)->nombre);
						printf("precio und:  %.0f\n",(p_productos+posicionProducto)->valor);
					}
				}
			}
			
			printf("\nEl Precio total de la factura es :%.0f", (p_facturas+i)->total);
			printf("\nEl Estado es:  ");
			
			if((p_facturas+i)->estado == 'p')
			{
				printf("Factura Pagada\n");
			}
			else
			{
				printf("Factura Sin Pagar\n");
			}
		}
	}
	
	getch();
	return resultado;
}
//****************************************************************
int cantProductovendido()
{
	dibujarRectangulo(22,76);
	int resultado = 0;
	int idProductoActual;
	int cantidadTotal = 0;
	int i, j, k;
	int c = 8;
	
	gotoxy(22, 4);printf("---CANTIDAD DE PRODUCTOS VENDIDOS POR CADA UNO---");
	
	for(k = 0; k < contadorProductos; k++)
	{
		cantidadTotal = 0;
		for(i = 0; i < contadorFacturas; i++)
		{ 
			for(j = 0; j < (p_facturas + i)->cantidadProducto;j++ )
			{ 
				
				idProductoActual = (p_facturas + i)->id_producto[j];
				if((p_productos + k)->id == idProductoActual)
				{
					cantidadTotal += ((p_facturas+i)->cantidad[j]);
				}
			}
		}
		gotoxy(4, 6);printf("ID Producto");
		gotoxy(23, 6);printf("Producto");
		gotoxy(45, 6);printf("Cant Vendidas");
		gotoxy(60, 6);printf("Precio Und");
		
		gotoxy(4, c);printf("%d",(p_productos + k)->id);
		gotoxy(23, c);printf("%s",(p_productos + k)->nombre);
		gotoxy(45, c);printf("%d", cantidadTotal);
		gotoxy(60, c);printf("%.0f",(p_productos + k)->valor);
		c++;
	}
	
	
	getch();
	return resultado;
}

//****************************************************************
int facturasPagadasNopagadas()
{
	int resultado = 0;
	int idProductoActual;
	int cantidadTotalPagadas = 0;
	int cantidadTotalSinPagar = 0;
	int i, j;
	
	int posicionProducto = 0;
	int posicionCliente = 0;
	
	
	for(i = 0; i < contadorFacturas; i++)
	{ 
		if((p_facturas + i )->estado == 'p')
		{
			cantidadTotalPagadas++;
		}
		else
		{
			cantidadTotalSinPagar++;
		}
	}
	//FACTURAS PAGADAS
	printf("----FACTURAS PAGADAS: %d ----\n",cantidadTotalPagadas);
	
	for(i = 0; i < contadorFacturas; i++)
	{
		if((p_facturas + i )->estado == 'p')
		{
			printf("\nFactura N° %d\n",i);
			
			for(posicionCliente = 0; posicionCliente < contadorUsuarios; posicionCliente++)
			{
				if((p_facturas+i)->id_cliente == posicionCliente)
				{
					printf("Cedula: %s\n",(p_usuarios+posicionCliente)->id);
					printf("Cliente:  %s",(p_usuarios+posicionCliente)->nombre);
					printf("Direccion: %s",(p_usuarios+posicionCliente)->direccion);
					printf("Telefono: %s",(p_usuarios+posicionCliente)->telefono);
				}
			}
			
			printf("\nLa Factura tiene %d productos\n",(p_facturas+i)->cantidadProducto);
			printf("\nPRODUCTOS:\n");
				
			for(j = 0; j < (p_facturas + i)->cantidadProducto;j++ )
			{ 
				
				idProductoActual = (p_facturas + i)->id_producto[j];
				for (posicionProducto = 0; posicionProducto < contadorProductos; posicionProducto++)
				{
					if((p_productos + posicionProducto)->id == idProductoActual)
					{
						printf("ID Producto: %d\n ",(p_productos + posicionProducto)->id);
						printf("producto:  %s\n",(p_productos+posicionProducto)->nombre);
						printf("Cant:  %d",(p_facturas+i)->cantidad[j]);
						printf("precio und:  %.0f",(p_productos+posicionProducto)->valor);
					}
				}
			}
			
			printf("\nEl Precio total de la factura es :%.0f", (p_facturas+i)->total);
			printf("\nEl Estado es:  ");
			
			if((p_facturas+i)->estado == 'p')
			{
				printf("Factura Pagada\n");
			}
			else
			{
				printf("Factura Sin Pagar\n");
			}
		}  
	}
	
	//FACTURAS SIN PAGAR
	printf("\n\n----FACTURAS SIN PAGAR: %d----\n",cantidadTotalSinPagar);
	
	for(i = 0; i < contadorFacturas; i++)
	{
		if((p_facturas + i )->estado == 's')
		{
			printf("\nFactura N° %d\n",i);
			
			for(posicionCliente = 0; posicionCliente < contadorUsuarios; posicionCliente++)
			{
				if((p_facturas+i)->id_cliente == posicionCliente)
				{
					printf("Cedula: %s\n",(p_usuarios+posicionCliente)->id);
					printf("Cliente: %s",(p_usuarios+posicionCliente)->nombre);
					printf("Direccion: %s",(p_usuarios+posicionCliente)->direccion);
					printf("Telefono: %s",(p_usuarios+posicionCliente)->telefono);
					
				}
			}
			
			printf("\nPRODUCTOS:\n");
			printf("La Factura tiene %d productos\n",(p_facturas+i)->cantidadProducto);
			
			for(j = 0; j < (p_facturas + i)->cantidadProducto;j++ )
			{ 
				
				idProductoActual = (p_facturas + i)->id_producto[j];
				for (posicionProducto = 0; posicionProducto < contadorProductos; posicionProducto++)
				{
					if((p_productos + posicionProducto)->id == idProductoActual)
					{
						printf("ID Producto: %d\n",(p_productos + posicionProducto)->id);
						printf("Cant:  %d\n",(p_facturas+i)->cantidad[j]);
						printf("producto: %s",(p_productos+posicionProducto)->nombre);
						printf("precio und: %.0f",(p_productos+posicionProducto)->valor);
					}
				}
			}
			
			printf("\nEl Precio total de la factura es :%.0f", (p_facturas+i)->total);
			printf("\nEl Estado es:  ");
			
			if((p_facturas+i)->estado == 'p')
			{
				printf("Factura Pagada\n");
			}
			else
			{
				printf("Factura Sin Pagar\n");
			}
		}  
	}
	
	getch();
	return resultado;
}

//***************************************************
int main(int argc, char** argv) 
{
	int resultado = 0;
	int opcion=1;
	
	
	while(opcion!=0)
	{
		system("CLS");
		dibujarRectangulo(22,76);
		gotoxy(28,5);printf("M E N U");
		gotoxy(18,7);printf("1.Crear, listar y editar clientes: ");
		gotoxy(18,8);printf("2.Crear, listar y editar productos: ");
		gotoxy(18,9);printf("3.Crear, listar y editar facturas:");
		gotoxy(18,10);printf("4.Mostrar todas las Facturas generadas por cliente:");
		gotoxy(18,11);printf("5.Mostrar todos los productos vendidos:");
		gotoxy(18,12);printf("6.Listar facturas pagadas y sin pagar:");
		gotoxy(18,13);printf("0.Salir");
		gotoxy(18,16);printf("Seleccione Opcion: "); 
		scanf("%d",&opcion);
		
		switch(opcion)
		{
			case 1: 
			{
				system("CLS");
				
				resultado = manejoClientes();
				
				
				break;
			}          
			case 2: 
			{
				system("CLS");
				
				resultado = manejoProducto();
				
				break;
			}        
			
			case 3: 
			{
				system("CLS");
				
				resultado = manejoFacturas();
				
				break;
			} 
			
			case 4: 
			{
				system("CLS");
				
				resultado = facturasClientes();
				
				break;
			}  
			
			case 5: 
			{
				system("CLS");
					
				resultado = cantProductovendido();
					
				break;
			} 
			case 6: {
				system("CLS");
				
				resultado = facturasPagadasNopagadas();
				
				break;
			}  
			
			default:{
				system("CLS");
				
				break;
			}          
		}
		
	}
	return resultado;
}

